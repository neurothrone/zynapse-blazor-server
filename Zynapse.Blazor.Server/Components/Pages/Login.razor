@page "/login"
@using Microsoft.AspNetCore.Components.Authorization
@using Zynapse.Blazor.Server.Services
@inject FirebaseAuthService AuthService
@inject NavigationManager NavigationManager
@inject FirebaseAuthenticationStateProvider AuthStateProvider

<PageTitle>Login - Zynapse</PageTitle>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3>Login or Create Account</h3>
                </div>
                <div class="card-body">
                    <AuthorizeView>
                        <Authorized>
                            <div class="alert alert-success">
                                You are already logged in. <a href="/profile">Go to Profile</a>
                            </div>
                        </Authorized>
                        <NotAuthorized>
                            <div class="mb-3">
                                <label class="form-label">Email</label>
                                <input @bind="Email" type="email" class="form-control" />
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Password</label>
                                <input @bind="Password" type="password" class="form-control" />
                            </div>
                            <div class="mb-3">
                                <button @onclick="HandleLogin" class="btn btn-primary me-2">Login</button>
                                <button @onclick="HandleCreateAccount" class="btn btn-secondary">Create Account</button>
                            </div>
                            @if (!string.IsNullOrEmpty(ErrorMessage))
                            {
                                <div class="alert alert-danger">
                                    @ErrorMessage
                                </div>
                            }
                        </NotAuthorized>
                    </AuthorizeView>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string Email = string.Empty;
    private string Password = string.Empty;
    private string ErrorMessage = string.Empty;
    private bool IsProcessing = false;

    private async Task HandleLogin()
    {
        if (IsProcessing) return;
        IsProcessing = true;
        ErrorMessage = string.Empty;

        try
        {
            var token = await AuthService.SignInWithEmailAndPasswordAsync(Email, Password);
            await AuthService.SetAuthCookie(token);
            AuthStateProvider.NotifyStateChanged();
            NavigationManager.NavigateTo("/profile", replace: true);
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
        finally
        {
            IsProcessing = false;
        }
    }

    private async Task HandleCreateAccount()
    {
        if (IsProcessing) return;
        IsProcessing = true;
        ErrorMessage = string.Empty;

        try
        {
            var token = await AuthService.CreateUserWithEmailAndPasswordAsync(Email, Password);
            await AuthService.SetAuthCookie(token);
            AuthStateProvider.NotifyStateChanged();
            NavigationManager.NavigateTo("/profile", replace: true);
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
        finally
        {
            IsProcessing = false;
        }
    }
} 