@page "/register"
@using Microsoft.AspNetCore.WebUtilities
@using System.Web
@using Zynapse.Blazor.Server.Models
@using Microsoft.AspNetCore.Antiforgery
@inject NavigationManager NavigationManager
@inject IAntiforgery AntiForgery
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>Register - Zynapse</PageTitle>

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h3>Create Account</h3>
                </div>
                <div class="card-body">
                    <form method="post" action="/api/auth/register">
                        <!-- Add anti forgery token -->
                        <input name="__RequestVerificationToken" type="hidden" value="@_requestToken"/>

                        @if (!string.IsNullOrEmpty(_errorMessage))
                        {
                            <div class="alert alert-danger mb-3">
                                @_errorMessage
                            </div>
                        }

                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" id="email" name="Email" class="form-control"
                                   value="@_registerModel.Email"
                                   @onchange="@(e => _registerModel.Email = e.Value?.ToString() ?? string.Empty)"
                                   required/>
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" id="password" name="Password" class="form-control"
                                   value="@_registerModel.Password"
                                   @onchange="@(e => _registerModel.Password = e.Value?.ToString() ?? string.Empty)"
                                   required minlength="6"/>
                        </div>
                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label">Confirm Password</label>
                            <input type="password" id="confirmPassword" name="ConfirmPassword" class="form-control"
                                   value="@_registerModel.ConfirmPassword"
                                   @onchange="@(e => _registerModel.ConfirmPassword = e.Value?.ToString() ?? string.Empty)"
                                   required/>
                        </div>
                        <div class="d-grid gap-2">
                            <button class="btn btn-primary" type="submit">
                                <span>Register</span>
                            </button>
                        </div>
                        <div class="mt-3 text-center">
                            <p>Already have an account? <a href="/login">Login here</a></p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private readonly RegisterModel _registerModel = new();
    private string? _errorMessage;
    private string? _requestToken;

    protected override void OnInitialized()
    {
        if (HttpContextAccessor.HttpContext != null)
        {
            var tokens = AntiForgery.GetAndStoreTokens(HttpContextAccessor.HttpContext);
            _requestToken = tokens.RequestToken;
        }

        // Check if the URL has an error parameter
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("error", out var errorValue))
        {
            _errorMessage = HttpUtility.UrlDecode(errorValue);
        }
    }

} 